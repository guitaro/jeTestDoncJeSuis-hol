<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>junit</groupId>
    <artifactId>junit-jetestdoncjesuis</artifactId>
    <version>4.13-SNAPSHOT</version>

    <licenses>
        <license>
            <name>Eclipse Public License 1.0</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>dsaff</id>
            <name>David Saff</name>
            <email>david@saff.net</email>
        </developer>
        <developer>
            <id>kcooney</id>
            <name>Kevin Cooney</name>
            <email>kcooney@google.com</email>
        </developer>
        <developer>
            <id>stefanbirkner</id>
            <name>Stefan Birkner</name>
            <email>mail@stefan-birkner.de</email>
        </developer>
        <developer>
            <id>marcphilipp</id>
            <name>Marc Philipp</name>
            <email>mail@marcphilipp.de</email>
        </developer>
    </developers>

    <properties>
        <jdkVersion>1.6</jdkVersion>
        <mvnVersion>3.0.4</mvnVersion>
        <surefireVersion>2.19.1</surefireVersion>
        <hamcrestVersion>1.3</hamcrestVersion>
        <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
        <arguments />
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrestVersion}</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrestVersion}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.basedir}</directory>
                <includes>
                    <include>LICENSE-junit.txt</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <!--
            Both "org.apache" and "org.codehaus" are default providers of MOJO plugins
            which are especially dedicated to Maven projects.
            The MOJO stands for "Maven plain Old Java Object".
            Each mojo is an executable goal in Maven, and a plugin is a distribution of
            one or more related mojos.
            For more information see http://maven.apache.org/plugin-developers/index.html

            The following plugins are ordered according the Maven build lifecycle.
            http://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
            -->
            <plugin>
                <!--
                Checks that the version of user's maven installation is 3.0.4,
                the JDK is 1.5+, no non-standard repositories are specified in
                the project, requires only release versions of dependencies of other artifacts.
                -->
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <requireMavenVersion>
                                    <!-- Some plugin features require a recent Maven runtime to work properly -->
                                    <message>Current version of Maven ${maven.version} required to build the project
                                        should be ${mvnVersion}, or higher!
                                    </message>
                                    <version>[${mvnVersion},)</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <message>Current JDK version ${java.version} should be ${jdkVersion}, or higher!
                                    </message>
                                    <version>${jdkVersion}</version>
                                </requireJavaVersion>
                                <requireNoRepositories>
                                    <message>Best Practice is to never define repositories in pom.xml (use a repository
                                        manager instead).
                                    </message>
                                </requireNoRepositories>
                                <requireReleaseDeps>
                                    <message>No Snapshots Dependencies Allowed!</message>
                                </requireReleaseDeps>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin><!-- Using jdk 1.5.0_22, package-info.java files are compiled correctly. -->
                <!--
                java compiler plugin forked in extra process
                -->
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <source>${jdkVersion}</source>
                    <target>${jdkVersion}</target>
                    <testSource>${jdkVersion}</testSource>
                    <testTarget>${jdkVersion}</testTarget>
                    <compilerVersion>${jdkVersion}</compilerVersion>
                    <fork>true</fork>
                    <compilerArgs>
                        <arg>-Xlint:unchecked</arg>
                    </compilerArgs>
                    <maxmem>128m</maxmem>
                </configuration>
            </plugin>
            <plugin>
                <!--
                A plugin which uses the JUnit framework in order to start
                our junit suite "AllTests" after the sources are compiled.
                -->
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefireVersion}</version>
                <configuration>
                    <test>org/junit/tests/AllTests.java</test>
                    <useSystemClassLoader>true</useSystemClassLoader>
                    <enableAssertions>false</enableAssertions>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>${surefireVersion}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
            </plugin>
        </plugins>
    </build>
</project>
